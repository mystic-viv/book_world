class LibrarianModel {
  final String id; // UUID
  final String customId; // Auto-generated by trigger (e.g., LIB-001)
  final String email;
  final String name;
  final String? mobile;
  final DateTime? dateOfBirth;
  final String? workAddress;
  final String? homeAddress;
  final String? libraryBranch;
  final String? profilePictureUrl;
  final DateTime createdAt;
  final DateTime updatedAt;

  LibrarianModel({
    required this.id,
    required this.customId,
    required this.email,
    required this.name,
    this.mobile,
    this.dateOfBirth,
    this.workAddress,
    this.homeAddress,
    this.libraryBranch,
    this.profilePictureUrl,
    required this.createdAt,
    required this.updatedAt,
  });

  // Create from JSON (from Supabase)
  factory LibrarianModel.fromJson(Map<String, dynamic> json) {
    return LibrarianModel(
      id: json['id'],
      customId: json['custom_id'],
      email: json['email'],
      name: json['name'],
      mobile: json['mobile'],
      dateOfBirth:
          json['date_of_birth'] != null
              ? DateTime.parse(json['date_of_birth'])
              : null, 
      workAddress: json['work_address'],
      homeAddress: json['home_address'],
      libraryBranch: json['library_branch'],
      profilePictureUrl: json['profile_picture_url'],
      createdAt:
          json['created_at'] != null
              ? DateTime.parse(json['created_at'])
              : DateTime.now(),
      updatedAt:
          json['updated_at'] != null
              ? DateTime.parse(json['updated_at'])
              : DateTime.now(),
    );
  }

  // Convert to JSON (for Supabase)
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'custom_id': customId,
      'email': email,
      'name': name,
      'mobile': mobile,
      'date_of_birth': dateOfBirth?.toIso8601String(),
      'work_address': workAddress,
      'home_address': homeAddress,
      'library_branch': libraryBranch,
      'profile_picture_url': profilePictureUrl,
      'created_at': createdAt.toIso8601String(),
      'updated_at': updatedAt.toIso8601String(),
    };
  }

  // Create a copy with updated fields
  LibrarianModel copyWith({
    String? id,
    String? customId,
    String? email,
    String? name,
    String? mobile,
    DateTime? dateOfBirth,
    String? workAddress,
    String? homeAddress,
    String? libraryBranch,
    String? profilePictureUrl,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return LibrarianModel(
      id: id ?? this.id,
      customId: customId ?? this.customId,
      email: email ?? this.email,
      name: name ?? this.name,
      mobile: mobile ?? this.mobile,
      dateOfBirth: dateOfBirth ?? this.dateOfBirth,
      workAddress: workAddress ?? this.workAddress,
      homeAddress: homeAddress ?? this.homeAddress,
      libraryBranch: libraryBranch ?? this.libraryBranch,
      profilePictureUrl: profilePictureUrl ?? this.profilePictureUrl,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
    );
  }

  // Helper method to get formatted display information
  String get displayInfo {
    String info = name;
    if (libraryBranch != null && libraryBranch!.isNotEmpty) {
      info += ' (${libraryBranch})';
    }
    return info;
  }
}
